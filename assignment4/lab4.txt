Gurbir Arora 105178554

Start by creating a new directory to store the files we are about to
fetch, I called it lab4install, Now run the commands wget
ftp://ftp.gnu.org/gnu/coreutils/coreutils-8.29.tar.xz, wget
ftp://ftp.gnu.org/gnu/coreutils/coreutils-8.29.tar.xz.sig wget
https://ftp.gnu.org/gnu/gnu-keyring.gpg to get the files

Now to unpack the tar file, use the command tar -xJvf
coreutils-8.29.tar.xz. Everything that is unpacked will be printed
out.  Now use the keyring to verify the signature by running the
command.  I noticed 3 good sinatures made, but the 4th gpg outputted
"WARNING: This key is not certified with a trusted signature!"
followed by "There is no indication that the signature belongs to the
owner." for the next gpg. This is due to the key not being verified,
meaning that anyone could have created it.  Now, make the current
directory the file that was created when we unpacked the tar file by
running the command cd coreutils-8.29.  Now run ./configure by using
your PWD and the command ./configure
--prefix=/u/ee/ugrad/gurbir/lab4install This command sort of generates
the makefile by checking your system Next, we run the command make to
compile and then make install to copy the executables to our chosen
directory.

To see the problem that we have, run the commands
/u/ee/ugrad/gurbir/lab4install/bin/ls -A -a and take note of the
output, which is .  ..  bin coreutils-8.29 coreutils-8.29.tar.xz
coreutils-8.29.tar.xz.sig gnu-keyring.gpg lab4.txt .lab4.txt.swp
libexec share Now, run the command:
/u/ee/ugrad/gurbir/lab4install/bin/ls -a -A: .  ..  bin coreutils-8.29
coreutils-8.29.tar.xz coreutils-8.29.tar.xz.sig gnu-keyring.gpg
lab4.txt .lab4.txt.swp libexec share with the output being exactly the
same and diplaying "." and "..", we know that there's a problem In
order to check the version of ls, we can enter the command and should
see ls (GNU coreutils) 8.22 as the version

Now, make coreutils-8.29 the current directory so that we can begin to
apply the patch Next, fetch the Bug#30963 Message #10 patch by
creating a file named patchls and copying and pasting the patch from
https://debbugs.gnu.org/cgi/bugreport.cgi?att=1;filename=0001-ls-A-now
-overrides-a.patch;bug=30963;msg=10
Then, apply the patch by running patch -p1 < patchls and we noticed
the output is Hunk #1 FAILED at 4.  1 out of 1 hunk FAILED -- saving
rejects to file NEWS.rej patching file src/ls.c Hunk #1 succeeded at
1900 (offset -3 lines).  patching file tests/local.mk patching file
tests/ls/a-option.sh The hunk FAILED is most likely a result of the
patch being made for a different version of coreutils, but since we
patched file src/ls.c, our patch should be applied.  Then to
officially update the coreutil, use the command make.  If you run into
an error saying 'automake-1.15' is missing on your system, your
local.mk file must've been modified, so configure must be rerun.  This
can be solved using the command autoreconf -fi, which remakes the
system build files.  Then use make and the patch should be applied.
In order to test the patch type the commands ./src/ls -a -A and you
should see that the "." and ".." directories are gone And if you run
./src/ls -A -a, you should them still get printed.

       
